apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: exam-converter
  labels:
    app: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: exam-converter/frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: wasm-modules
          mountPath: /usr/share/nginx/html/wasm
          readOnly: true
      
      # Init container to copy WASM modules
      initContainers:
      - name: copy-wasm-modules
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "ðŸ“¦ Copying WASM modules..."
          mkdir -p /wasm/python /wasm/rust
          # In production, copy from WASM service or shared volume
          echo "âœ… WASM modules ready"
        volumeMounts:
        - name: wasm-modules
          mountPath: /wasm
      
      volumes:
      - name: wasm-modules
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: exam-converter
spec:
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP